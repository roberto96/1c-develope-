
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогСохраненияФайла.ПолноеИмяФайла = "";
	ДиалогСохраненияФайла.МножественныйВыбор = 	ложь;
	
	Если ДиалогСохраненияФайла.Выбрать() Тогда
	ПутьКФайлу = ДиалогСохраненияФайла.ПолноеИмяФайла;
	Объект.ПерезаписатьДубли = истина; 
	Объект.ПустьКФайлу = ПутьКФайлу;

	Иначе
		ПоказатьПредупреждение(,"Не выбран файл для загрузки");
		Возврат;
	КонецЕсли; 
	//ПЕРЕЗАПИСАТЬ	
//	Если ЗначениеЗаполнено(Объект.ПустьКФайлу) тогда
//	ПерезаписатьДубли = Истина                    ;
//	иначе ПерезаписатьДубли = Истина //Объект.ПерезаписатьДубли = Истина ;
//	КонецЕсли      ;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦены()
	
	
	НД = Документы.УстановкаЦенНоменклатуры.СоздатьДокумент();
	НД.Дата = ТекущаяДата();
	НД.Статус = Перечисления.СтатусыУстановокЦенНоменклатуры.Согласован;
	
	ТЧ_ВидыЦен = НД.ВидыЦен.Добавить();
	ТЧ_ВидыЦен.ВидЦены = Объект.ВидЦены; 
	
	Для Каждого строка из Объект.Товары Цикл
		
		НС = НД.Товары.Добавить();
		НС.ВидЦены = Объект.ВидЦены;
		
		Если Объект.КлючПоиска = "1" Тогда
			НС.Номенклатура =  Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",строка.Артикул);
		КонецЕсли;
		
		Если Объект.КлючПоиска = "2" Тогда
			НС.Номенклатура = Справочники.Номенклатура.НайтиПоНаименованию(строка.Наименование);
		КонецЕсли;
		
		//Если Объект.КлючПоиска = "3" Тогда
		//	НайденаНоменклатура = Справочники.Номенклатура.НайтиПоКоду("");
		//КонецЕсли;
		НС.Упаковка = НС.Номенклатура.ЕдиницаДляОтчетов;
		НС.Цена = Число(СтрЗаменить(строка.Цена,"-","."));
		
		
	КонецЦикла;	
	
	НД.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры	



&НаСервере
Процедура СоздатьНоменклатуру()
	chislo = 0;
	
	Для Каждого строка из Объект.Товары Цикл
		
		Если Объект.КлючПоиска = "1" Тогда
			НайденаНоменклатура =  Справочники.Номенклатура.НайтиПоРеквизиту("Артикул",строка.Артикул);
		КонецЕсли;
		
		Если Объект.КлючПоиска = "2" Тогда
			НайденаНоменклатура = Справочники.Номенклатура.НайтиПоНаименованию(строка.Наименование);
		КонецЕсли;
		
		//Если Объект.КлючПоиска = "3" Тогда
		//	НайденаНоменклатура = Справочники.Номенклатура.НайтиПоКоду("");
		//КонецЕсли;
		
		Если НайденаНоменклатура.Пустая() Тогда
			НоваяНомеклатура = Справочники.Номенклатура.СоздатьЭлемент();
		Иначе
			Если Объект.ПерезаписатьДубли Тогда
				НоваяНомеклатура = НайденаНоменклатура.ПолучитьОбъект();
			Иначе
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
		
		НоваяНомеклатура.Наименование = строка.Наименование;
		НоваяНомеклатура.НаименованиеПолное = строка.Наименование;
		НоваяНомеклатура.Артикул = строка.Артикул;
		НоваяНомеклатура.ЕдиницаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(строка.ЕдиницаИзмерения);
		НоваяНомеклатура.ЕдиницаДляОтчетов = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоНаименованию(строка.ЕдиницаИзмерения);
		НоваяНомеклатура.Производитель = НайтиПроизводителя(строка.Производитель);
		НоваяНомеклатура.Родитель = НайтиРодителя(строка.Группа);
		НоваяНомеклатура.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Товар", Истина);
		ССЫЛКА = строка.Изображение ;
		chislo = chislo + 1; 
		НоваяНомеклатура.Записать();
		сообщить("успешно");
		СтрАдрес = строка.Изображение ;
		ПутьФайла = ПолучитьИмяВременногоФайла("jpg") ;
		КопироватьФайл(СтрАдрес, ПутьФайла );
		МояКартинка = Новый Картинка(ПутьФайла);
		ХранилищеКартинки = Новый ХранилищеЗначения(МояКартинка);	
		
		//
					
	Попытка		
		НачатьТранзакцию();
		
		ФайлИзображения = новый Файл(ПутьФайла);
		Если ФайлИзображения.Существует() Тогда
			ДвоичныеДанные = Новый ДвоичныеДанные(ПутьФайла);
			АдресВременногоХранилищаФайла = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
			
			Если ЗначениеЗаполнено(НоваяНомеклатура.ФайлКартинки) Тогда
				ИнформацияОФайле = Новый Структура;
				ИнформацияОФайле.Вставить("АдресФайлаВоВременномХранилище",АдресВременногоХранилищаФайла);
				ИнформацияОФайле.Вставить("АдресВременногоХранилищаТекста","");
				ИнформацияОФайле.Вставить("ИмяБезРасширения"              ,ФайлИзображения.ИмяБезРасширения);
				ИнформацияОФайле.Вставить("ДатаМодификацииУниверсальная"  ,ТекущаяДата());
				ИнформацияОФайле.Вставить("Расширение"                    ,СтрЗаменить(ФайлИзображения.Расширение,".",""));
				
				ПрисоединенныеФайлы.ОбновитьПрисоединенныйФайл(НоваяНомеклатура.ФайлКартинки,ИнформацияОФайле);
				ЗафиксироватьТранзакцию();
				Сообщить("УСПЕШНО загружено изображение в "+НоваяНомеклатура);
			Иначе 
				ПрисоединенныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(НоваяНомеклатура,ФайлИзображения.ИмяБезРасширения,СтрЗаменить(ФайлИзображения.Расширение,".",""),ТекущаяДата(),ТекущаяДата(),АдресВременногоХранилищаФайла,,"Изображение загружено обработкой по данным файла Excel");
				
				Если ЗначениеЗаполнено(ПрисоединенныйФайл) Тогда
					НоменклатураОбъект = НоваяНомеклатура.ПолучитьОбъект();
					НоменклатураОбъект.ФайлКартинки = ПрисоединенныйФайл;
					
					НоменклатураОбъект.Записать();
					ЗафиксироватьТранзакцию();
					Сообщить("УСПЕШНО загружено изображение в "+НоваяНомеклатура);
				Иначе
					Сообщить("Не удалось добавить в базу файл "+ПутьФайла);
					ОтменитьТранзакцию();
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			Сообщить("Файл "+ПутьФайла+" не найден");
			ОтменитьТранзакцию();
		КонецЕсли;
	Исключение
		Сообщить("При добавлении файла "+ПутьФайла+" произошла ошибка "+ОписаниеОшибки());
		ОтменитьТранзакцию();
	КонецПопытки;

				
		
		
		
		
		////////////////////////
		//
		//
		// Текст = ССЫЛКА = строка.Изображение ; 
		//   РасширениеФайла = "jpg";
		//   АдресКартинки = СтрЗаменить(Текст, """", "");
		// ИмяКартинки = ПолучитьИмяВременногоФайла("jpg");
		//   НовоеИмя = ПолучитьИмяВременногоФайла(РасширениеФайла);
		// ПрисоединенныеФайлыМассив = Новый Массив; 
		// 
		// 
		// 
		//
		////вставим процедурку из спр

		//ИдентификаторФайла = Новый УникальныйИдентификатор;
		//
		//Файл = Новый Файл(ПутьФайла);
		//
		//ВремяИзменения = ТекущаяДата();
		//ВремяИзмененияУниверсальное = Файл.ПолучитьУниверсальноеВремяИзменения();
		//
		//ПомещаемыеФайлы = Новый Массив;
		//Описание = Новый ОписаниеПередаваемогоФайла(Файл.ПолноеИмя, "");
		//
		////загрузка /************************

		//КартинкаСсылка = Справочники.НоменклатураПрисоединенныеФайлы.ПустаяСсылка();
		//КартинкаОбъект = Справочники.НоменклатураПрисоединенныеФайлы.СоздатьЭлемент();
		//КартинкаОбъект.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе;            
		//КартинкаОбъект.Наименование = НоваяНомеклатура;
		//КартинкаОбъект.ВладелецФайла = НоваяНомеклатура.Ссылка;
		//
		//К1 = Новый Картинка(ПутьФайла, истина);            
		//КартинкаОбъект.ФайлХранилище = Новый ХранилищеЗначения(К1.ПолучитьДвоичныеДанные());
		//
		//КартинкаОбъект.Расширение = "jpg";
		//КартинкаОбъект.СтатусИзвлеченияТекста = Перечисления.СтатусыИзвлеченияТекстаФайлов.НеИзвлечен;
		//ФайлК = Новый Файл(ПутьФайла);            
		//КартинкаОбъект.Размер = ФайлК.Размер();
		//
		//ДвоичныеДанные = Новый ДвоичныеДанные(ПутьФайла); 
		//адресВХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
		//
		//КартинкаОбъект.Записать();
		//КартинкаСсылка = КартинкаОбъект.Ссылка; 
		//
		//КартинкаСохранить = РегистрыСведений.ДвоичныеДанныеФайлов.СоздатьНаборЗаписей();
		////КартинкаСохранить. ПрисоединенныйФайл .Установить(КартинкаОбъект.Ссылка);
		//НовыйФайл = КартинкаСохранить.Добавить();
		//НовыйФайл.ПрисоединенныйФайл = КартинкаСсылка;
		//НовыйФайл.ХранимыйФайл = КартинкаОбъект.ФайлХранилище;
		//КартинкаСохранить.Записать();
		//
		//НовоеЗначение = НоваяНомеклатура.ПолучитьОбъект();
		//НовоеЗначение.ФайлКартинки = КартинкаСсылка;
		//НовоеЗначение.Записать();
		////****************
		//
		
		
		
	///////////////////////	
	КонецЦикла;	
	КонецПроцедуры	




&НаСервере
Функция НайтиРодителя(РодительНомеклатуры)
	
	НайденаГруппа = Справочники.Номенклатура.НайтиПоНаименованию(РодительНомеклатуры, Истина);	
	
	Если НЕ НайденаГруппа.Пустая() Тогда
		
		Возврат НайденаГруппа; 
		
	КонецЕсли;
	
	НоваяГруппа = Справочники.Номенклатура.СоздатьГруппу();
	НоваяГруппа.Наименование = РодительНомеклатуры;
	НоваяГруппа.Записать();
	Возврат НоваяГруппа.Ссылка;
	
КонецФункции

&НаСервере
Функция НайтиПроизводителя(Производитель)
	
	НайденПроизводитель = Справочники.Производители.НайтиПоНаименованию(Производитель, Истина);	
	
	Если НЕ НайденПроизводитель.Пустая() Тогда
		
		Возврат НайденПроизводитель; 
		
	КонецЕсли;
	
	НовыйПроизводитель = Справочники.Производители.СоздатьЭлемент();
	НовыйПроизводитель.Наименование = Производитель;
	НовыйПроизводитель.Записать();
	Возврат НовыйПроизводитель.Ссылка;
	
КонецФункции	
	

&НаКлиенте	
Функция ОткрытьExcel(ПутьКФайлу)
	
	Файл = Новый Файл(ПутьКФайлу);
	Если Файл.Расширение = ".xls" Тогда
		ТипФайла = "";
	ИначеЕсли Файл.Расширение = ".xlsx" Тогда
		ТипФайла = " Xml";
	Иначе
		ВызватьИсключение "Не поддерживаемый тип файла " + Файл.Расширение;
	КонецЕсли;
	
	СonnectionString = "Provider=Microsoft.ACE.OLEDB.12.0; Data Source=" + ПутьКФайлу +
	"; Extended Properties=""Excel 12.0" + ТипФайла + ";HDR=Yes;IMEX=1;""";
	
	Connection = Новый COMОбъект("ADODB.Connection");
	Connection.ConnectionString = СonnectionString;
	Connection.ConnectionTimeout = 10;
	Connection.CursorLocation = 3;
	Connection.Open();	
	Возврат Connection;
	
КонецФункции

&НаКлиенте
Функция ПолучитьЛистыExcel(Connection)
	
	SchemaTables = 20;
	RecordsetTables = Connection.OpenSchema(SchemaTables);
	
	МассивЛистов = Новый Массив();
	
	Пока НЕ RecordsetTables.Eof() Цикл
		МассивЛистов.Добавить( RecordsetTables.Fields("TABLE_NAME").Value );
		RecordsetTables.MoveNext();
	КонецЦикла;	
	
	Возврат МассивЛистов;
	
КонецФункции

&НаКлиенте
Функция ПрочитатьЛистExcel(Connection, Лист)
	
	Recordset = Новый COMОбъект("ADODB.Recordset");
	Recordset.ActiveConnection = Connection;
	Recordset.LockType = 1;
	Recordset.CursorType = 3;
	Recordset.Open("SELECT * FROM [" + Лист + "]");
	Возврат Recordset;	
	
КонецФункции

&НаКлиенте
Процедура ЗакрытьExcel(Connection)
	
	Если Connection <> Неопределено Тогда
		
		Если Connection.State <> 0 Тогда
			Connection.Close();
		КонецЕсли;
		
		Connection = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаСервере
Функция EXCELВТаблицуЗначений(ДвоичныеДанные, Расширение)
	
	ФайлEXCELНаСервере = ПолучитьИмяВременногоФайла(Расширение);
	ДвоичныеДанные.Записать(ФайлEXCELНаСервере);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ФайлEXCELНаСервере);
	УдалитьФайлы(ФайлEXCELНаСервере);
	ОбластьТаблицы = ТабличныйДокумент.Область(1, 1, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы);
	
	ПостроительЗапроса = Новый ПостроительЗапроса;
	ПостроительЗапроса.ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьТаблицы);  
	ПостроительЗапроса.Выполнить();
	ТаблицаДанных = ПостроительЗапроса.Результат.Выгрузить();
	
	// теперь поссмторим что в Таблице
	Возврат ТаблицаЗначенийВТабличныйДокумент(ТаблицаДанных);
	
	
КонецФункции 

&НаСервереБезКонтекста
Функция ТаблицаЗначенийВТабличныйДокумент(ТаблицаДанных)
	
	ПостроительОтчета = Новый ПостроительОтчета;
	ПостроительОтчета.ИсточникДанных = Новый ОписаниеИсточникаДанных(ТаблицаДанных);
	ДокументРезультат = Новый ТабличныйДокумент;
	Построительотчета.Вывести(ДокументРезультат);
	Возврат ДокументРезультат;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	ОчиститьСообщения();	
	// Проверка на заполненость
	Если не ЗначениеЗаполнено(Объект.ВидЦены) тогда 
		сбп=Новый СообщениеПользователю;
		сбп.Текст = "Не выбран вид цены!";
		сбп.Поле="ВидЦены";
		сбп.ПутьКДанным = "Объект.ВидЦены";
		сбп.Сообщить();
		Возврат;
	конецесли;	
	
	// Проверка на заполненость
	Если не ЗначениеЗаполнено(Объект.КлючПоиска) тогда 
		сбп=Новый СообщениеПользователю;
		сбп.Текст = "Не выбран ключ поиска!";
		сбп.Поле="КлючПоиска";
		сбп.ПутьКДанным = "Объект.КлючПоиска";
		сбп.Сообщить();
		Возврат;
	конецесли;	

	// Проверка на заполненость
	Если не ЗначениеЗаполнено(Объект.ПустьКФайлу) тогда 
		сбп=Новый СообщениеПользователю;
		сбп.Текст = "Не выбран файл импорта";
		сбп.Поле="ПустьКФайлу";
		сбп.ПутьКДанным = "Объект.ПустьКФайлу";
		сбп.Сообщить();
		Возврат;
	конецесли;	

	
	
	
	
	Connection = ОткрытьExcel(Объект.ПустьКФайлу);
	МассивЛистов = ПолучитьЛистыExcel(Connection);
	
	Объект.Товары.Очистить();
	
	Для каждого Лист Из МассивЛистов Цикл
		
		Recordset = ПрочитатьЛистExcel(Connection, Лист);
		Recordset.MoveFirst();
		
		Пока НЕ Recordset.Eof() Цикл	
			
			ТекСтрока_Эксель = Объект.Товары.Добавить();
			
			ТекСтрока_Эксель.Наименование = Recordset.Fields.Item("Наименование").Value;
			ТекСтрока_Эксель.Артикул = Recordset.Fields.Item("Артикул").Value;
			ТекСтрока_Эксель.Группа = Recordset.Fields.Item("Группа").Value;
			ТекСтрока_Эксель.ЕдиницаИзмерения = Recordset.Fields.Item("Единица Измерения").Value;
			ТекСтрока_Эксель.Производитель = Recordset.Fields.Item("Производитель").Value;
			ТекСтрока_Эксель.Цена = Recordset.Fields.Item("Цена, руб#").Value;
			ТекСтрока_Эксель.Изображение = Recordset.Fields.Item("Изображение").Value;
			
			Recordset.MoveNext();
			
		КонецЦикла;
		
	КонецЦикла;
	
	ЗакрытьExcel(Connection);
	
	СоздатьНоменклатуру();
	ЗаполнитьЦены();

КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуОткрытие(Элемент, СтандартнаяОбработка)
	ЗапуститьПриложение(СокрЛП(Объект.ПустьКФайлу));
КонецПроцедуры
